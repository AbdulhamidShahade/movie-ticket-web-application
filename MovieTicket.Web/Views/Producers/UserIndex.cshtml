@using MovieTicket.Web.Repositories.IRepository
@model List<MovieTicket.Web.Models.ViewModels.ProducerVM.ReadProducerVM>

@inject ICountryRepository countryRepository;

@{
    ViewData["Title"] = "Producer List";
}

<head>
    <link href="@Url.Content("~/css/Producers/userIndex.css")" rel="stylesheet" type="text/css" />
</head>

<body>
    <div id="popup" class="popup hidden">
        <div class="popup-content">
            <div class="popup-header">
                <img id="producer-picture" src="" alt="John Wick" class="producer-poster">
                <div class="popup-header-details">
                    <h2 id="producer-name"></h2>
                    <p style="margin-top:8px;" id="country-name"></p>
                </div>
            </div>
            <p class="producer-description" id="producer-bio"></p>
            <p id="producer-birth-date"></p>
            <div class="popup-buttons">
                <a id="producer-details" class="btn btn-primary" href="">Information</a>
                <a id="producer-movies" class="btn btn-primary" href="">Movies</a>
            </div>
            <button class="close-btn" onclick="togglePopup()">Close</button>
        </div>
    </div>

    <div class="container mt-4">
        <h1 class="pb-3">Producers</h1>
        @foreach (var producer in Model)
        {
            <div class="producer-list">
                <div class="row producer-item mb-4">
                    <div class="col-md-1">
                        <span class="position">@producer.Id</span>
                    </div>
                    <div class="col-md-1">
                        <img src="@producer.PictureUrl"
                             class="img-fluid imgg"
                             alt="The Shawshank Redemption" />
                    </div>
                    <div class="col-md-8">
                        <h5 class="producer-title">@producer.FirstName @producer.LastName</h5>
                        <p style="margin-top:8px;">@countryRepository.GetCountryByActorIdAsync(@producer.Id).GetAwaiter().GetResult().Nicename</p>
                        <div class="producer-info">@await Component.InvokeAsync("CountMoviesByProducer", @producer.Id)</div>
                    </div>
                    <div class="col-md-2 d-flex justify-content-end align-items-center">
                        <div>
                            <a onclick="showMovieData(`@producer.FirstName`, `@producer.LastName`, `@producer.Bio`, `@producer.BirthDate`, `@producer.Id.ToString()`, `@producer.PictureUrl`,
                                                       `@countryRepository.GetCountryByProducerIdAsync(@producer.Id).GetAwaiter().GetResult().Nicename`)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" class="ipc-icon ipc-icon--info" viewBox="0 0 24 24" fill="currentColor" role="presentation"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"></path></svg>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <script src="~/js/Producers/userIndex.js"></script>
</body>